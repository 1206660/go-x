syntax = "proto3";

package proto;

enum MsgTypeCmd {
    UNSPECIFIED = 0;
    Login = 1;              // 登录
    Verify = 2;             // 验证令牌
    Forward = 3;            // 转发
    Kick = 4;               // 踢人
};


/// Login (C->S)
enum LoginMode {
    Default = 0;            // 缺省登录（本地数据库保存帐号密码。首次登录，没有帐号密码时，直接插入本地数据库）
    CUSTOM_BEGIN = 100;     // go-x common层以外的第3方平台登录
}

message EnumLogin
{
    enum Error {
        NoErr = 0;
        ErrPassword = 1;        // 密码错误
        ErrAccount = 2;         // 帐号错误
        ErrPlatformSide = 3;    // 平台方错误
        ErrMode = 4;            // Mode错误
        ErrDB = 5;              // 数据库错误
        ErrGateway = 6;         // 找不到Gateway
        ErrParams = 7;          // 参数错误
    }
}

message MsgLogin
{
    string Account = 1;     // 帐号
    string Password = 2;    // 密码
    LoginMode Mode = 3;     // 登录模式
    bytes Userdata = 4;     // 不同登录模式，可能需要携带自定义数据
}

message MsgLoginResult
{
    EnumLogin.Error Err = 1;     // 0:登录成功；非0:错误号
    string Token = 2;       // 令牌
    string Address = 3;     // Gateway IP、PORT(格式 ip:port)
}


/// Verify (C->S; S->S)
message MsgVerify
{
    string Account = 1;     // 帐号
    string Token = 2;       // 令牌
}

/// Forward (C->S; S->S)
message MsgForward
{
    uint32 Type = 1;         // 类型
    bytes Data = 2;          // 数据
    string ID = 3;           // 服务ID。用于S->S。如果该字段不为空，Type字段忽略。
}

/// KickPlayer (S->S)
message MsgKick
{
    uint64 UID = 1;         // 帐号ID
}




